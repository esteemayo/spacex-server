{"version":3,"sources":["ApolloProvider.jsx","components/Loader.jsx","components/LaunchItem.jsx","components/MissionKey.jsx","queries/queries.jsx","components/Launches.jsx","components/Launch.jsx","components/Footer.jsx","logo.png","App.js","reportWebVitals.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","ApolloProvider","props","Loader","className","role","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","format","to","MissionKey","FETCH_LAUNCHES_QUERY","gql","FETCH_LAUNCH_QUERY","Launches","useQuery","loading","error","data","console","log","launches","map","Math","random","Launch","match","params","parseInt","displayLaunch","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Footer","year","Date","getFullYear","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f21584db.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, ApolloProvider as Provider } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n    uri: '/graphql',\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport default function ApolloProvider(props) {\r\n    return <Provider client={client} {...props} />\r\n}","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LaunchItem = ({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) => {\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9\">\r\n                    <h4>Mission: \r\n                        <span className={ launch_success ? 'text-success' : 'text-danger' }>\r\n                            { mission_name }\r\n                        </span>\r\n                    </h4>\r\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LaunchItem;","import React from 'react';\r\n\r\nconst MissionKey = () => {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n            </p>\r\n            <p>\r\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MissionKey;","import { gql } from '@apollo/client';\r\n\r\nconst FETCH_LAUNCHES_QUERY = gql`\r\n    query launches {\r\n        launches {\r\n            flight_number\r\n            mission_name\r\n            launch_date_local\r\n            launch_success\r\n        }\r\n    }\r\n`;\r\n\r\nconst FETCH_LAUNCH_QUERY = gql`\r\n    query launch($flight_number: Int!) {\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_date_local\r\n            launch_success\r\n            rocket{\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport {\r\n    FETCH_LAUNCHES_QUERY,\r\n    FETCH_LAUNCH_QUERY\r\n}","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Loader from './Loader';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\nimport { FETCH_LAUNCHES_QUERY } from '../queries/queries';\r\n\r\nconst Launches = () => {\r\n    const { loading, error, data } = useQuery(FETCH_LAUNCHES_QUERY);\r\n\r\n    if (error) return console.log(error);\r\n\r\n    const launches = loading ? (\r\n        <Loader />\r\n    ) : (\r\n            data && data.launches.map(launch => (\r\n                <LaunchItem\r\n                    key={ launch.flight_number || launch.flight_number === 110 ? Math.random() * 10000000 : launch.flight_number }\r\n                    launch={ launch } \r\n                />\r\n            ))\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 my-3\">Launches</h1>\r\n            <MissionKey />\r\n            { launches }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Launches;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { FETCH_LAUNCH_QUERY } from '../queries/queries';\r\nimport Loader from './Loader';\r\n\r\nconst Launch = ({ match }) => {\r\n    let { flight_number } = match.params;\r\n    flight_number = parseInt(flight_number);\r\n\r\n    const { loading, error, data } = useQuery(FETCH_LAUNCH_QUERY, {\r\n        variables: {\r\n            flight_number\r\n        }\r\n    });\r\n\r\n    if (error) return console.log(error);\r\n\r\n    let displayLaunch;\r\n\r\n    if (loading) {\r\n        displayLaunch = <Loader />\r\n    } else if (data) {\r\n        const { flight_number, mission_name, launch_year, launch_success, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch;\r\n\r\n        displayLaunch = (\r\n            <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                    <span className=\"text-dark\">Mission: { mission_name }</span>\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        Flight Number: { flight_number }\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        Launch Year: { launch_year }\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        Launch Successful: <span className={ launch_success ? 'text-success' : 'text-danger' }>\r\n                            {launch_success ? 'Yes' : 'No'}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Rocket ID: { rocket_id }</li>\r\n                    <li className=\"list-group-item\">Rocket Name: { rocket_name }</li>\r\n                    <li className=\"list-group-item\">Rocket Type: { rocket_type }</li>\r\n                </ul>\r\n                <hr/>\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return displayLaunch;\r\n}\r\n\r\nexport default Launch;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const year = new Date();\r\n\r\n    return (\r\n        <footer className=\"footer my-5\">\r\n            <p className=\"text-center\">&copy; { year.getFullYear() }. All Right Reserved. Design by Emmanuel Adebayo&trade;</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport ApolloProvider from './ApolloProvider';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport Footer from './components/Footer';\n\nimport \"./App.css\";\nimport logo from \"./logo.png\";\n\nfunction App() {\n  return (\n    <ApolloProvider>\n      <div className=\"container\">\n        <img\n          src={logo}\n          alt=\"SpaceX\"\n          style={{ width: 300, display: 'block', margin: 'auto' }}\n        />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}